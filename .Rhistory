mat2[3,c(2,3,4)]
mat2[1,]
mat2[,3]
mat2[,1]+mat2[,3]
counts
Counts
cancer<-matrix(data=c(33,250,196,136,32,55,293,190,71,13),nrow=2,ncol=5,byrow=T)
cancer
dimnames(cancer)<-list(c("Lung cancer","Control"),c("1 to 4","5 to 14","25 to 49","50+"))
dimnames(cancer)<-list(c("Lung cancer","Control"),c("1 to 4","5 to 14","15 to 24","25 to 49","50+"))
cancer
barplot(cancer,beside=T)
barplot(cancer,beside=T,legend.text=T,xlab="Number of cigarettes smoked",ylab="Number of cases")
chisq.test(cancer)
cancer.chisq<-chisq.test(cancer)
cancer.chisq
names(cancer.chisq)
cancer.chisq$residuals
mydata<-read.table(file.choose(),header=T)
names(mydata)
str(mydata)
mydata<-read.table(file.choose(),sep=",",header=T)
names(mydata)
str(mydata)
head()
head(mydata)
?read.table
mydata$KWH[1]
mydata$KWH[1,1]
mydata[1,3]
?type.convert
mydata<-read.table(file.choose(),sep=",",header=T)
str(mydata)
mydata<-read.table(file.choose(),sep=",",header=T)
str(mydata)
mydata<-read.table(file.choose(),sep=",",header=T)
str(mydata)
summary(mydata)
attach(mydata)
hist(AvgDailyTemp)
q()
ls()
str(mydata)
?
transpose
??transpose
?lm
q()
x
x<-
## incomplete
1
x<-5
x<-5 #nothing printed
x # print
x<-1:20
x
x<-1:40
x
x<-1:75
x
x<-vector("numeric",length=10)
x
y<-c(1.7,"a")
y
str(y)
y<-c(T,2)
y
str(y)
as.logical(y)
str(y)
x<-c("A","b","c")
as.numeric(x)
x
str(x)
m<-matrix(nrow=2,ncol=3)
m
dim(m)
attributes(m)
m<-1:10
dim(m)<-c(2,5)
c
m
x<-1:3
y<-10:12
cbind(x,y)
rbind(x,y)
m<-cbind(x,y)
m
x<-list(1,"a",T,1+4i)
x
str(x)
x<-factor(c("yes","yes","no","yes","no"))
x
table(x)
unclass(x)
x
x<-factor(c("yes","yes","no","yes","no"),levels(c("yes","no"))
x
x<-factor(c("yes","yes","no","yes","no"),levels=c("yes","no"))
x
unclass(x)
x<-c(1,2,NA,10,3)
is.na(x)
is.nan(x)
x<-c(1,2,NaN,NA,4)
is.na(x)
is.nan(x)
x<-data.frame(foo=1:4,bar=c(T,T,F,F))
x
nrow(x)
ncol(x)
x<-1:3
names(x)
names(x)<-c("foo","bar","norf")
x
names(x)
x<-list(a=1,b=2,c=3)
x
m<-matrix(1:4,nrow=2,ncol=2)
dimnames(m)<-list(c("a","b"),c("c","d"))
m
q()
x<-c("a","b","c","c","d","a")
x[1]
x[2]
x{1:4]
x[x>"a"]
x[1:4]
u<-x>"a"
a
u
x[u]
u<-x>"b"
u
x[u]
x<-matrix(1:6,2,3)
x[1,2]
x
x[2,1]
x[1,]
x[,2]
x[1,2,drop=F]
x[1,,drop=F]
x[,2,drop=F]
x<-list(foo=1:4,bar=.6)
x[1]
x[[1]]
x$bar
x[["bar"]]
x["bar"]
x<-list(foo=1:4,bar=.6,baz="hello")
x[c(1,3)]
name<-"foo"
x[[name]]
x$name
x$foo
x<-list(a=list(10,12,14),b=c(3.14,2.81))
x
x[[c(1,3)]]
x[[1]][[3]]
x<-list(aardvark=1:5)
x$a
x<-list(aardvark=1:5,ant=6:10)
x$a
x$aa
x$an
x[["a"]]
x[["a",exact=F]]
x[["a",exact=FALSE]]
x[["aa",exact=FALSE]]
x<-c(1,2,NA,4,NA,5)
bad<-is.na(x)
bad
x[!bad]
x[!is.na(x)]
y<-c("a","b",NA,"d",NA,"f")
good<-complete.caes(x,y)
good<-complete.cases(x,y)
good
x[good]
y[good]
ls()
str(mydata)
mydata.good<-complete.cases(mydata)
str(mydata.good)
x<1:4;y<-6:9
x<-1:4;y<-6:9
x+y
x>2
x>=2
y==8
x*y
x/y
x
y
x<-matrix(1:4,2,2);y<-matrix(rep(10,4),2,2)
x
y
x*y
x/y
x%*%y
?length
?sum
q()
y<-if(x>3){10}{else{0}
y<-if(x>3){10}else{0}
x<-4
y<-if(x>3){10}else{0}
y
x<-2
y
y<-if(x>3){10}else{0}
y
for (i in 1:10){print(i)}
x<-c("a","b","c","d")
for (i in 1:4){print(x[i])}
for (i in seq_along(x)){print(i)}
for(letter in x){print(letter)}
for(i in 1:4) print(x[i])
str(seq_len)
?seq_len
x<-matrix(1:6,2,3)
for (i in seq_len(nrow(x))){ for (j in seq_len(ncol(x))){print(x[i,j])}}
for (i in 1:10) print(i)
for (i in 10:1) print(i)
count<-0
while(count<10){print(count);count<-count+1}
x<-5
while(x>=3 && x<=10){print(z)
coin<-rbinom(1,1,.5)
if(coin==1){##random walk
z<z+1
}{else{z<z-1}}
for (i in 1:100){
if(i<=20){
next ## skip for 20 iterations
}
print(i)
}
mydata<-rnorm(100)
sd(mydata)
sd(x=mydata)
sd(x=mydata,na.rm=FALSE)
sd(na.rm=FALSE,x=mydata)
sd(na.rm=FALSE,mydata)
formals(sd)
str(sd)
args(lm)
lm(data=mydata,model=FALSE,1:100)
lm(data=mydata,y~x,model=FALSE,1:100)
mydata
f<-function(a,b,){a^2}
f<-function(a,b){a^2}
f(2)
f(,2)
f(3,2)
f<-function(a,b){
print(a)
print(b)
}
f(45)
f(45,23)
q()
q()
search()
make.power<-function(n){
pow<-funtion(x){
x^n
}
}
}
pow<-function(x){
cube<-make.power(3)
square<-make.power(2)
cube
}
make.power<-function(n){
pow<-function(x){
x^n
}
}
cube<-make.power(3)
square<-make.power(2)
cube
square
y<-10
f<-function(x){
y<-2
y^2 + g(x)
}
g<-function(x){
x*y
}
f(3)
x<-list(a=1:5,b=rnorm(10))
lapply(x,mean)
x<-list(a=1:4,b=rnorm(10))
n<-1:4
r<-lapply(n,rnorm)
str(r)
x<-1:4
lapply(x,runif)
args(runif)
lapply(x,runif,min=0,max=10)
lapply(x,runif,0,10)
lapply(x,runif,ma=10)
x<-list(a=matrix(1:4,2,2),b=matrix(1:6,3,2))
x
lapply(x,function(elt) elt[],1])
lapply(x,function(elt) elt[,1])
x<-list(1=1:4,b=rnorm(10),c=rnorm(20,1),d=rnorm(100,5))
x<-list(a=1:4,b=rnorm(10),c=rnorm(20,1),d=rnorm(100,5))
lapply(x,mean)
sapply(x,mean)
mean(x)
x <- list(rnorm(100), runif(100), rpois(100, 1))
sapply(x, quantile, probs = c(0.25, 0.75))
str(sapply(x, quantile, probs = c(0.25, 0.75)))
rnorm(100)
runif(100)
rpois(100, 1)
str(quantile)
?quantile
x<-matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,1,mean)
apply(x,1,quantile,probs=c(0.25,0.75))
str(rowMeans)
str(colMeans)
rowMeans(x)
colMeans(x)
a-<matrix(rnorm(2*2*10),c(2,2,10))
a<-matrix(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims=2)
x<-matrix(rnorm(200),50,4)
apply(x,3,mean)
x<-c(rnorm(10),runif(10),rnorm(10,1))
f<-gl(3,10)
f
x
str(x)
tapply(x,f,mean)
tapply(x,f,mean,simplify=FALSE)
tapply(x,f,range)
split(x,f)
lapply(split(x,f),mean)
library(datasets)
head(airquality)
str(airquality)
s<-split(airquality,airquality$Month)
lapply(s,function(x),colMeans(x[,c("Ozone","Solar.R",
"Wind")]))
lapply(s,function(x),colMeans(x[,c("Ozone","Solar.R","Wind")]))
lapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")]))
sapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")]))
sapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")],na.rm=TRUE))
x<-rnorm(10)
f1<-cl(2,5)
f1<-gl(2,5)
f2<-fl(5,2)
f2<-gl(5,2)
f1
f2
interaction(f1,f2)
str(split(x,list(f1,f2)))
str(split(x,list(f1,f2),drop=TRUE))
x<-matrix(rnorm(100),100,10)
str()
str(x)
x
mapply(rep,1:4,4:1)
str(rep)
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1)) ##same as mapply(rep,1:4,4:1)
noise<-function(n,mean,sd){
rnorm(n,mean,sd)
}
noise(5,1,2)
noise(1:5,1:5,2)
mapply(noise,1:5:1:5,2)
mapply(noise,1:5,1:5,2)
log(-1)
printmessage<-funtion(x){
if(x>0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
printmessage<-funtion(x){
if(x>0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
printmessage<-function(x){
if(x>0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
printmessage(1)
printmessage<-function(x){
if(x>0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
#  invisible(x)
}
printmessage(1)
printmessage(NA)
printmessage<-function(x){
if(x>0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
printmessage(NA)
printmessage2<-function(x){
if(is.na(x))
print("x is a missing value!")
else if(x>0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
x<-log(-1)
printmessage2(x)
printmessage(x)
mean(x)
rm(x)
mean(x)
traceback()
lm(y~x)
rm(y)
lm(y~x)
traceback()
debug(lm)
lm(y~x)
options(error=recover)
read.csv("nofile")
x<-rnorm(10)
print(x)
x<-rnorm(10,20,2)
print(x)
summary(x)
set.seed(1)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
rnorm(5)
rnorm(5)
rnorm(5)
set.seed(1)
set.seed(3)
rnorm(5)
rpois(10,1)
rpois(10,2)
rpois(10,20)
ppois(2,2)
ppois(4,2)
ppois(6,2)
set.seed(20)
x<-rnorm(100)
e<-rnorm(100,0,2)
y<-0.5+2*x+e
summary(y)
plot(x,y)
x<-1:100
e<-rnorm(100,0,1)
y<-1.5-3*x+e
plot(x,y)
set.seed(10)
x<-rbinom(100,1,.5)
e<-rnorm(100,0,2)
y<-.5+2*x+e
summary(y)
plot(x,y)
set.seed(1)
x<-rnorm(100)
log.mu<-.5+.3*x
y<-rpois(100,exp(log.mu))
summary(y)
plot(x,y)
set.seed(1)
sample(1:10,4)
sample(1:10,4)
sample(letters,5)
sample(1:10)
sample(1:10)
sample(1:10,replace=TRUE)
sample(letters)
sample(letters,replace=TRUE)
q()
a<-available.packages()
head(rownames(a),3)
length(rownames(a))
search()
pwd
getwd()
setwd("C:/Users/faith")
ls
dir
setwd("C:/Users/faith/datasciencecoursera")
